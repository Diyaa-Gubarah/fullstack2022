{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diyaa\\\\Desktop\\\\fullstackopen\\\\part2\\\\phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport phoneServices from \"./services/phonebook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst checkIfEmpty = function () {\n  for (var _len = arguments.length, arg = new Array(_len), _key = 0; _key < _len; _key++) {\n    arg[_key] = arguments[_key];\n  }\n\n  return arg.map(a => a.length === 0).includes(true);\n};\n\nconst checkIfExists = (key, value, array) => array.find(person => person[key] === value);\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [filter, setFiltered] = useState([]);\n  const [info, setInfo] = useState({\n    name: \"\",\n    number: \"\"\n  });\n\n  const filterPersons = e => {\n    const text = e.target.value;\n    const copy = [...persons];\n    const filteredPersons = text ? copy.filter(person => person.name.toLowerCase().includes(text.toLowerCase())) : [...persons];\n    setFiltered(filteredPersons);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const newPerson = {\n      name: info.name,\n      number: info.number,\n      id: persons.length + 1\n    };\n    const exist = persons.find(p => p.name === info.name || p.number === info.number);\n\n    if (checkIfExists(\"name\", info.name, persons)) {\n      alert(`${info.name} is already added to phonebook, replace the old number with a new one`);\n    } else if (checkIfExists(\"number\", info.number, persons)) {\n      if (window.confirm(`${info.number} is already added to phonebook, replace the old name with a new one`)) {\n        phoneServices.update(exist.id, newPerson);\n        setPersons(persons.map(p => p.id === exist.id ? newPerson : p));\n        setFiltered(persons.map(p => p.id === exist.id ? newPerson : p));\n      } else {\n        return;\n      }\n    } else if (checkIfEmpty(info.name, info.number)) {\n      alert(\"Both name and number are required\");\n    } else {\n      // add new person to the phonebook\n      phoneServices.create(newPerson).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setFiltered(persons.concat(newPerson));\n        setInfo({\n          name: \"\",\n          number: \"\"\n        });\n      }).catch(error => {\n        alert(`${info.name} is already added to phonebook`);\n      });\n    }\n  };\n\n  const deletePerson = id => {\n    const copy = [...persons];\n    let text = `Delete ${copy.find(p => p.id === id).name}`;\n\n    if (window.confirm(text) === true) {\n      try {\n        phoneServices.remove(id).then(() => {\n          setPersons(copy.filter(person => person.id !== id));\n          setFiltered(copy.filter(person => person.id !== id));\n        });\n      } catch (error) {\n        alert(`Failed to delete ${info.name}`);\n      }\n    } else {\n      alert(`Delete ${info.name} cancelled`);\n    }\n  };\n\n  const onChangeName = event => {\n    setInfo({ ...info,\n      name: event.target.value\n    });\n  };\n\n  const onChangeNumber = event => {\n    setInfo({ ...info,\n      number: event.target.value\n    });\n  };\n\n  useEffect(() => {\n    phoneServices.getAll().then(initialNotes => {\n      setPersons(initialNotes);\n      setFiltered(initialNotes);\n    }).catch(error => {\n      alert(\"error fetching data\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filterPersons: filterPersons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      onSubmit: onSubmit,\n      info: info,\n      onChangeName: onChangeName,\n      onChangeNumber: onChangeNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: filter,\n      onClick: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"QyvKbHMk4oFsUIN8rIqjOhitr6c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Filter","PersonForm","Persons","phoneServices","checkIfEmpty","arg","map","a","length","includes","checkIfExists","key","value","array","find","person","App","persons","setPersons","filter","setFiltered","info","setInfo","name","number","filterPersons","e","text","target","copy","filteredPersons","toLowerCase","onSubmit","event","preventDefault","newPerson","id","exist","p","alert","window","confirm","update","create","then","returnedPerson","concat","catch","error","deletePerson","remove","onChangeName","onChangeNumber","getAll","initialNotes"],"sources":["C:/Users/Diyaa/Desktop/fullstackopen/part2/phonebook/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport phoneServices from \"./services/phonebook\";\n\nconst checkIfEmpty = (...arg) => arg.map((a) => a.length === 0).includes(true);\nconst checkIfExists = (key, value, array) =>\n  array.find((person) => person[key] === value);\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFiltered] = useState([]);\n  const [info, setInfo] = useState({\n    name: \"\",\n    number: \"\",\n  });\n\n  const filterPersons = (e) => {\n    const text = e.target.value;\n\n    const copy = [...persons];\n\n    const filteredPersons = text\n      ? copy.filter((person) =>\n          person.name.toLowerCase().includes(text.toLowerCase())\n        )\n      : [...persons];\n    setFiltered(filteredPersons);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const newPerson = {\n      name: info.name,\n      number: info.number,\n      id: persons.length + 1,\n    };\n\n    const exist = persons.find(\n      (p) => p.name === info.name || p.number === info.number\n    );\n\n    if (checkIfExists(\"name\", info.name, persons)) {\n      alert(\n        `${info.name} is already added to phonebook, replace the old number with a new one`\n      );\n    } else if (checkIfExists(\"number\", info.number, persons)) {\n      if (\n        window.confirm(\n          `${info.number} is already added to phonebook, replace the old name with a new one`\n        )\n      ) {\n        phoneServices.update(exist.id, newPerson);\n        setPersons(persons.map((p) => (p.id === exist.id ? newPerson : p)));\n        setFiltered(persons.map((p) => (p.id === exist.id ? newPerson : p)));\n      } else {\n        return;\n      }\n    } else if (checkIfEmpty(info.name, info.number)) {\n      alert(\"Both name and number are required\");\n    } else {\n      // add new person to the phonebook\n      phoneServices\n        .create(newPerson)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          setFiltered(persons.concat(newPerson));\n          setInfo({ name: \"\", number: \"\" });\n        })\n        .catch((error) => {\n          alert(`${info.name} is already added to phonebook`);\n        });\n    }\n  };\n\n  const deletePerson = (id) => {\n    const copy = [...persons];\n\n    let text = `Delete ${copy.find((p) => p.id === id).name}`;\n    if (window.confirm(text) === true) {\n      try {\n        phoneServices.remove(id).then(() => {\n          setPersons(copy.filter((person) => person.id !== id));\n          setFiltered(copy.filter((person) => person.id !== id));\n        });\n      } catch (error) {\n        alert(`Failed to delete ${info.name}`);\n      }\n    } else {\n      alert(`Delete ${info.name} cancelled`);\n    }\n  };\n\n  const onChangeName = (event) => {\n    setInfo({ ...info, name: event.target.value });\n  };\n\n  const onChangeNumber = (event) => {\n    setInfo({ ...info, number: event.target.value });\n  };\n\n  useEffect(() => {\n    phoneServices\n      .getAll()\n      .then((initialNotes) => {\n        setPersons(initialNotes);\n        setFiltered(initialNotes);\n      })\n      .catch((error) => {\n        alert(\"error fetching data\");\n      });\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter filterPersons={filterPersons} />\n\n      <h3>Add a new</h3>\n\n      <PersonForm\n        onSubmit={onSubmit}\n        info={info}\n        onChangeName={onChangeName}\n        onChangeNumber={onChangeNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={filter} onClick={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}